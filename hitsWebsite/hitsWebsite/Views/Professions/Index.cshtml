@using hitsWebsite.Services
@using hitsWebsite.Models.ViewModels
@inject IDataProviderService DataProviderService
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> localizationOptions

@{
    // projectNameOfPage and name of current controller
    ViewData["Title"] = "Professions";

    // Cultures info
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();  // Current culture request
    var supportedCultures = localizationOptions.Value.SupportedUICultures;  // Supported cultures in app

    // projectNameOfBlocks for partial
    const string ProfessionsName = "ProfessionsBlock";
    const string HitsTestName = "HitsTestBlock";

    // DB entities
    var professions = await DataProviderService.GetProfessions();
}


<partial name="_DynamicPageInfo" model="@ViewData["Title"].ToString()" />

@*  All content under page info  *@
<div class="row pt-4">

    <partial name="_LeftNavigationBar" />

    <div id="blocks-container" class="col col-lg-9">
        <div class="row info-block">

            @* Name of professions block *@
            <partial name="_BlockName" model='new _BlockNameViewModel() {
                    CurrentControllerName = ViewData["Title"].ToString(),
                    ProjectBlockName = ProfessionsName
            }' />

            @* Cards of professions *@
            <div class="col-12 mt-3">
                <div class="row">
                    @if (professions.Count == 0 && !User.IsInRole(ApplicationRoles.Administrators))
                    {
                        <div class="col-sm-6 col-md-4 specialty-container">
                            <h6>@localizer["EmptyCards"]</h6>
                        </div>
                    }
                    else
                    {
                        @for (var i = 0; i < professions.Count; i++) // List ordered by Name
                        {
                            <div class="col-sm-6 col-md-4 card-container">
                                <div class="card box">
                                    @if (User.IsInRole(ApplicationRoles.Administrators))
                                    {
                                        <div class="card-btns-container">
                                            <button class="open-popup btn-edit" rel="profession-edit-@i"></button>
                                            <button class="open-popup btn-delete" rel="profession-delete-@i"></button>
                                        </div>
                                    }
                                    <h4>@professions[i].ProfessionTranslations.Where(x => x.Language == culture.RequestCulture.UICulture.Name).SingleOrDefault().Name</h4>
                                    <p class="pt-3">
                                        @professions[i].ProfessionTranslations.Where(x => x.Language == culture.RequestCulture.UICulture.Name).SingleOrDefault().Description
                                    </p>
                                </div>
                            </div>

                            @if (User.IsInRole(ApplicationRoles.Administrators))
                            {
                                var idEdit = $"profession-edit-{i}";
                                var idDelete = $"profession-delete-{i}";

                                <partial name="_PopupOpen" model="@idEdit" />
                                <form asp-action="EditProfession" asp-controller="Professions" asp-route-id="@professions[i].Id">
                                    <h4>@localizer["EditAction"]</h4>
                                    @for (var j = 0; j < supportedCultures.Count; j++)
                                    {
                                        <h5>@supportedCultures[j].Name</h5>

                                        <input class="entry-field" type="text" name="@("Name[" + j + "]")"
                                               value="@professions[i].ProfessionTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name"
                                               placeholder="@localizer["InputName"]" autocomplete="off" required />

                                        // textarea shouldn't has any extra spaces between openning and closing tags
                                        <textarea class="entry-field mt-3" type="text" name="@("Description[" + j + "]")" placeholder="@localizer["InputDescription"]" autocomplete="off"
                                                  required>@professions[i].ProfessionTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description</textarea>
                                        <hr>

                                        <input type="hidden" name="@("Language[" + j + "]")" value="@supportedCultures[j].Name" required />
                                    }
                                    <div class="mt-3 d-flex justify-content-end">
                                        <button type="button" class="cancel-editing btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                        <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                    </div>
                                </form>
                                <partial name="_PopupClose" />

                                <partial name="_PopupOpen" model="@idDelete" />
                                <form asp-action="DeleteProfession" asp-controller="Professions" asp-route-id="@professions[i].Id">
                                    <h4>@localizer["DeleteAction"]</h4>

                                    @for (var j = 0; j < supportedCultures.Count; j++)
                                    {
                                        <h5>@supportedCultures[j].Name</h5>
                                        <div>
                                            @localizer["InputName"]: @professions[i].ProfessionTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name <br>
                                            @localizer["InputDescription"]: @professions[i].ProfessionTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description
                                        </div>
                                        <hr>
                                    }
                                    <div class="mt-3 d-flex justify-content-end">
                                        <button type="button" class="cancel-editing btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                        <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                    </div>
                                </form>
                                <partial name="_PopupClose" />
                            }
                        }
                    }

                    @if (User.IsInRole(ApplicationRoles.Administrators))
                    {
                        <div class="col-sm-6 col-md-4 card-container">
                            <div class="card box adding-card">

                                <div class="btn-add-container">
                                    <input type="button" class="add-btn" />
                                </div>

                                <form asp-action="CreateProfession" method="post" class="hidden">
                                    @localizer["AddAction"]
                                    @for (var i = 0; i < supportedCultures.Count; i++)
                                    {
                                        <h5>@supportedCultures[i].Name</h5>
                                        <input class="entry-field" type="text" name="@("Name[" + i + "]")" value="" placeholder="@localizer["InputName"]" autocomplete="off" required />
                                        <input class="entry-field mt-3" type="text" name="@("Description[" + i + "]")" value="" placeholder="@localizer["InputDescription"]" autocomplete="off" required />
                                        <input type="hidden" name="@("Language[" + i + "]")" value="@supportedCultures[i].Name" required />
                                    }
                                    <button type="button" class="cancel-adding btn btn-outline-danger mt-3">@localizer["ButtonCancel"]</button>
                                    <button type="submit" class="btn btn-primary mt-3">@localizer["ButtonSave"]</button>
                                </form>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>


        @*  HITs Test  *@
        <div class="row info-block mt-5">

            @* Name of HITs test block *@
            <partial name="_BlockName" model='new _BlockNameViewModel() {
                    CurrentControllerName = ViewData["Title"].ToString(),
                    ProjectBlockName = HitsTestName
                 }' />

            <div class="col-12 mt-3 test-hits">

                <div class="row">
                    <div class="col-6 col-lg-12">

                        <div class="row mb-4">
                            <div class="col-12">
                                <h6>@localizer["JokeQuestion1"]</h6>
                            </div>
                            <div class="col-11 col-lg-6 col-xl-5">
                                <input class="entry-field" type="text" placeholder="@localizer["Answer"]" />
                            </div>
                        </div>

                    </div>
                    <div class="col-6 col-lg-12">

                        <div class="row mb-4">
                            <div class="col-12">
                                <h6>@localizer["JokeQuestion2"]</h6>
                            </div>
                            <div class="col-11 col-lg-6 col-xl-5">
                                <div class="row pt-2">
                                    <div class="col-3"><button class="answer">@localizer["Answer1"]</button></div>
                                    <div class="col-3"><button class="answer">@localizer["Answer2"]</button></div>
                                    <div class="col-3"><button class="answer">@localizer["Answer3"]</button></div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-6 col-lg-12">

                        <div class="row mb-4">
                            <div class="col-12">
                                <h6>@localizer["JokeQuestion3"]</h6>
                            </div>
                            <div class="col-11 col-lg-6 col-xl-5">
                                <input class="entry-field" type="text" placeholder="@localizer["Answer"]" />
                            </div>
                        </div>

                    </div>
                    <div class="col-6 col-lg-12">

                        <div class="row mt-lg-4">
                            <div class="col-11 col-lg-5 col-xl-4">
                                <button type="button" class="big-btn">@localizer["Result"]</button>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>
