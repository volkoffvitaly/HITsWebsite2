@using hitsWebsite.Services
@using hitsWebsite.Models.ViewModels
@inject IDataProviderService DataProviderService
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> localizationOptions

@{
    // projectNameOfPage
    ViewData["Title"] = "Live";

    // Cultures info
    var requestedCulture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>().RequestCulture.UICulture.Name;  // Current culture request
    var supportedCultures = localizationOptions.Value.SupportedUICultures;  // Supported cultures in app

    // projectNameOfBlocks
    const string CityFeaturesName = "CityFeaturesBlock";
    const string DormitoriesName = "DormitoriesBlock";

    // DB entities
    var cityFeatures = await DataProviderService.GetCityFeatures();
    var cityFeaturesWithPhotos = await DataProviderService.GetCityFeaturesWithPhotos();

    var dormitories = await DataProviderService.GetDormitories();
}


<partial name="_DynamicPageInfo" model="@ViewData["Title"]" />


<div class="row pt-4">


    <partial name="_LeftNavigationBar" />

    <div id="blocks-container" class="col col-lg-9">

        @* CITY FEATURES CARDS *@
        <div class="row info-block">

            <partial name="_BlockName" model='new _BlockNameViewModel() {
                    CurrentControllerName = ViewData["Title"].ToString(),
                    ProjectBlockName = CityFeaturesName
                }' />

            <div class="col-12 mt-3">
                <div class="row cards-container">
                    @if (cityFeatures.Count == 0 && cityFeaturesWithPhotos.Count == 0 && !User.IsInRole(ApplicationRoles.Administrators))
                    {
                        <div class="col-auto">
                            <h6>@localizer["EmptyCards"]</h6>
                        </div>
                    }

                    else
                    {
                        @for (var i = 0; i < cityFeatures.Count; i++)
                        {
                            var idEdit = $"city-features-edit-{i}";
                            var idDelete = $"city-features-delete-{i}";

                            <div class="col-sm-6 col-md-4 card-container">
                                <div class="card box">
                                    @if (User.IsInRole(ApplicationRoles.Administrators))
                                    {
                                        <div class="card-btns-container">
                                            <button class="open-popup btn-edit" rel="@idEdit"></button>
                                            <button class="open-popup btn-delete" rel="@idDelete"></button>
                                        </div>
                                    }

                                    <h4>@cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Name</h4>
                                    <p class="pt-3">
                                        @cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Description
                                    </p>
                                </div>
                            </div>

                            @* EDIT & DELETE CITY FEATURES CARD *@
                            @if (User.IsInRole(ApplicationRoles.Administrators))
                            {
                                <partial name="_PopupOpen" model="idEdit" />
                                <form asp-action="EditCityFeature" asp-route-id="@cityFeatures[i].Id" method="post" enctype="multipart/form-data">

                                    <h4>@localizer["EditAction"]</h4>

                                    @for (var j = 0; j < supportedCultures.Count; j++)
                                    {
                                        <h5>@supportedCultures[j].Name</h5>

                                        <input required name="Name" type="text" placeholder="@localizer["InputName"]" autocomplete="off" class="entry-field"
                                               value="@cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name" />

                                        <textarea required name="Description" type="text" placeholder="@localizer["InputDescription"]" autocomplete="off"
                                                  class="entry-field mt-3">@cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description</textarea>

                                        <input required hidden type="text" name="Language" value="@supportedCultures[j].Name" />
                                        <hr>
                                    }

                                    <label for="load-@idEdit" class="load-labal">@localizer["SelectImages"]</label>
                                    <input id="load-@idEdit" name="Pictures" multiple type="file" accept=".jpg, .jpeg, .png" class="load-input form-control" />

                                    <div class="mt-3 d-flex justify-content-end">
                                        <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                        <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                    </div>
                                </form>
                                <partial name="_PopupClose" />


                                <partial name="_PopupOpen" model="idDelete" />
                                <form asp-action="DeleteCityFeature" asp-route-id="@cityFeatures[i].Id">
                                    <h4>@localizer["DeleteAction"]</h4>

                                    @for (var j = 0; j < supportedCultures.Count; j++)
                                    {
                                        <h5>@supportedCultures[j].Name</h5>
                                        <div>
                                            @localizer["InputName"]:
                                            @cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name
                                            <br>
                                            @localizer["InputDescription"]:
                                            @cityFeatures[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description
                                        </div>
                                        <hr>
                                    }
                                    <div class="mt-3 d-flex justify-content-end">
                                        <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                        <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                    </div>
                                </form>
                                <partial name="_PopupClose" />
                            }
                        }
                    }

                    @* CREATE ABOUT CITY CARD *@
                    @if (User.IsInRole(ApplicationRoles.Administrators))
                    {
                        var idCreate = "add-city-feature";

                        <div class="col-sm-6 col-md-4 card-container">
                            <div class="card box adding-card">
                                <input type="button" class="open-popup add-btn" rel="@idCreate" />
                            </div>
                        </div>

                        <partial name="_PopupOpen" model="idCreate" />
                        <form asp-action="CreateCityFeature" method="post" enctype="multipart/form-data">

                            <h4>@localizer["AddAction"]</h4>

                            @for (var i = 0; i < supportedCultures.Count; i++)
                            {
                                <h5>@supportedCultures[i].Name</h5>

                                <input required name="Name" type="text" placeholder="@localizer["InputName"]" autocomplete="off" class="entry-field" />
                                <textarea name="Description" type="text" placeholder="@localizer["InputDescription"]" autocomplete="off" class="entry-field mt-3"></textarea>
                                <input required hidden name="Language" type="text" value="@supportedCultures[i].Name" />
                                <hr>
                            }

                            <label for="load-@idCreate" class="load-labal">@localizer["SelectImages"]</label>
                            <input id="load-@idCreate" name="Pictures" multiple type="file" accept=".jpg, .jpeg, .png" class="load-input form-control" />

                            <div class="mt-3 d-flex justify-content-end">
                                <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                <button type="submit" class="btn btn-primary">@localizer["ButtonSave"]</button>
                            </div>

                        </form>
                        <partial name="_PopupClose" />
                    }

                </div>


                @* CITY FEATURES WITH PHOTOS CARDS *@
                @for (var i = 0; i < cityFeaturesWithPhotos.Count; i++)
                {
                    var idEdit = $"city-features-edit-with-photos-{i}";
                    var idDelete = $"city-features-delete-with-photos-{i}";

                    <div class="w-100 box mt-4">
                        @* EDIT & DELETE CITY FEATURES WITH PHOTOS CARDS *@
                        @if (User.IsInRole(ApplicationRoles.Administrators))
                        {
                            <div class="card-btns-container">
                                <button class="open-popup btn-edit" rel="@idEdit"></button>
                                <button class="open-popup btn-delete" rel="@idDelete"></button>
                            </div>

                            <partial name="_PopupOpen" model="@idEdit" />
                            <form asp-action="EditCityFeature" asp-route-id="@cityFeaturesWithPhotos[i].Id" method="post" enctype="multipart/form-data">

                                <h4>@localizer["EditAction"]</h4>

                                @for (var j = 0; j < supportedCultures.Count; j++)
                                {
                                    <h5>@supportedCultures[j].Name</h5>

                                    <input required name="Name" type="text" placeholder="@localizer["InputName"]" autocomplete="off" class="entry-field"
                                           value="@cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Name" />
                                    <textarea name="Description" type="text" placeholder="@localizer["InputDescription"]" autocomplete="off"
                                              class="entry-field mt-3">@cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Description</textarea>

                                    <input required hidden name="Language" type="text" value="@supportedCultures[j].Name" />
                                    <hr>
                                }

                                <div class="row">
                                    @for (var j = 0; j < cityFeaturesWithPhotos[i].Pictures.Count; j++)
                                    {
                                        var idDeletePhoto = idDelete + $"photo-{j}";

                                        <div class="col-6 mb-3">
                                            <div class="delete-photo">
                                                <input class="custom-checkbox" type="checkbox" name="PicturesToDelete"
                                                       value="@cityFeaturesWithPhotos[i].Pictures.ElementAt(j).Id" id="@idDeletePhoto">

                                                <label for="@idDeletePhoto">@localizer["Remove"]</label>
                                                <div>
                                                    <img src="@cityFeaturesWithPhotos[i].Pictures.ElementAt(j).Path" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <label for="load-@idEdit" class="load-labal">@localizer["SelectImages"]</label>
                                <input multiple type="file" accept=".jpg, .jpeg, .png" name="Pictures" id="load-@idEdit" class="load-input form-control" />

                                <div class="mt-3 d-flex justify-content-end">
                                    <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                    <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                </div>
                            </form>
                            <partial name="_PopupClose" />

                            <partial name="_PopupOpen" model='@idDelete' />
                            <form asp-action="DeleteCityFeature" asp-route-id="@cityFeaturesWithPhotos[i].Id" method="post">
                                <h4>@localizer["DeleteAction"]</h4>

                                @for (var j = 0; j < supportedCultures.Count; j++)
                                {
                                    <h5>@supportedCultures[j].Name</h5>
                                    <div>
                                        @localizer["InputName"]:
                                        @cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name
                                        <br>
                                        @localizer["InputDescription"]:
                                        @cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description
                                    </div>
                                    <hr>
                                }

                                <div class="mt-3 d-flex justify-content-end">
                                    <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                    <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                </div>
                            </form>
                            <partial name="_PopupClose" />
                        }


                        @* RETRIEVE CITY FEATURES WITH PHOTOS CARDS *@
                        <h4>@cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Name</h4>

                        <p class="pt-3">
                            @cityFeaturesWithPhotos[i].CityFeatureTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Description
                        </p>

                        @{
                            var idCarouselCityFeature = $"carousel-city-feature-{i}";
                        }

                        <div class="photos-container mt-4">
                            <div class="row">

                                <div class="col-sm-9">
                                    <div id="@idCarouselCityFeature" class="carousel slide carousel-fade" data-ride="carousel">

                                        <!--Slides-->
                                        <div class="carousel-inner" role="listbox">
                                            @for (var j = 0; j < cityFeaturesWithPhotos[i].Pictures.Count; j++)
                                            {
                                                @if (j == 0)
                                                {
                                                    <!--First slide-->
                                                    <div class="carousel-item photo active">
                                                        <img class="d-block" src="@cityFeaturesWithPhotos[i].Pictures.First().Path">
                                                    </div>
                                                    <!--/First slide-->
                                                }

                                                else
                                                {
                                                    <div class="carousel-item photo">
                                                        <img class="d-block" src="@cityFeaturesWithPhotos[i].Pictures.ElementAt(j).Path">
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <!--/.Slides-->
                                        <!--Controls-->
                                        <a class="carousel-control-prev" href="#@idCarouselCityFeature" role="button" data-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="sr-only">Previous</span>
                                        </a>
                                        <a class="carousel-control-next" href="#@idCarouselCityFeature" role="button" data-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="sr-only">Next</span>
                                        </a>
                                        <!--/.Controls-->
                                    </div>
                                </div>

                                <div class="d-none d-sm-block col-3">
                                    <div class="indicators-container position-relative">
                                        <!--Indicators-->
                                        <ol>
                                            @for (var j = 0; j < cityFeaturesWithPhotos[i].Pictures.Count; j++)
                                            {
                                                <li data-target="#@idCarouselCityFeature" data-slide-to="@j">
                                                    <img class="d-block" src="@cityFeaturesWithPhotos[i].Pictures.ElementAt(j).Path">
                                                </li>
                                            }
                                        </ol>
                                        <!--/.Indicators-->
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>


        @* DORMITORIES CARDS *@
        <div class="row info-block mt-5">
            <partial name="_BlockName" model='new _BlockNameViewModel() {
                    CurrentControllerName = ViewData["Title"].ToString(),
                    ProjectBlockName = DormitoriesName
                }' />



            @if (dormitories.Count == 0 && !User.IsInRole(ApplicationRoles.Administrators))
            {
                <div class="col-auto">
                    <h6>@localizer["EmptyCards"]</h6>
                </div>
            }
            else
            {
                <div class="col-12">
                    @for (var i = 0; i < dormitories.Count; i++)
                    {
                        var idEdit = $"dormitory-edit-{i}";
                        var idDelete = $"dormitory-delete-{i}";

                        <div class="w-100 box mt-4">
                            @if (User.IsInRole(ApplicationRoles.Administrators))
                            {
                                <div class="card-btns-container">
                                    <button class="open-popup btn-edit" rel="@idEdit"></button>
                                    <button class="open-popup btn-delete" rel="@idDelete"></button>
                                </div>
                            }
                            <h4>@dormitories[i].DormitoryTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Name</h4>

                            <p class="mt-4">
                                @dormitories[i].DormitoryTranslations.Where(x => x.Language == requestedCulture).SingleOrDefault().Description
                            </p>

                            <div class="photos-container mt-4">
                                <div class="row">

                                    <div class="col-sm-9">
                                        <div id="carousel-hostel-@i" class="carousel slide carousel-fade" data-ride="carousel">
                                            <!--Slides-->
                                            <div class="carousel-inner" role="listbox">
                                                @for (var j = 0; j < dormitories[i].Pictures.Count; j++)
                                                {
                                                    @if (j == 0)
                                                    {
                                                        <!--First slide-->
                                                        <div class="carousel-item photo active">
                                                            <img class="d-block" src="@dormitories[i].Pictures.First().Path">
                                                        </div>
                                                        <!--/First slide-->
                                                    }

                                                    else
                                                    {
                                                        <div class="carousel-item photo">
                                                            <img class="d-block" src="@dormitories[i].Pictures.ElementAt(j).Path">
                                                        </div>
                                                    }
                                                }
                                            </div>
                                            <!--/.Slides-->
                                            <!--Controls-->
                                            <a class="carousel-control-prev" href="#carousel-hostel-@i" role="button" data-slide="prev">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                            <a class="carousel-control-next" href="#carousel-hostel-@i" role="button" data-slide="next">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                            <!--/.Controls-->
                                        </div>
                                    </div>

                                    <div class="d-none d-sm-block col-3">
                                        <div class="indicators-container position-relative">
                                            <!--Indicators-->
                                            <ol>
                                                @for (var j = 0; j < dormitories[i].Pictures.Count; j++)
                                                {
                                                    <li data-target="#carousel-hostel-@i" data-slide-to="@j">
                                                        <img class="d-block" src="@dormitories[i].Pictures.ElementAt(j).Path">
                                                    </li>
                                                }
                                            </ol>
                                            <!--Indicators-->
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>


                        @*  Edit & Delete Dormitory by Admin  *@
                        @if (User.IsInRole(ApplicationRoles.Administrators))
                        {
                            <partial name="_PopupOpen" model='@idEdit' />
                            <form asp-action="EditDormitory" asp-route-id="@dormitories[i].Id" method="post" enctype="multipart/form-data">

                                <h4>@localizer["EditAction"]</h4>

                                @for (var j = 0; j < supportedCultures.Count; j++)
                                {
                                    <h5>@supportedCultures[j].Name</h5>

                                    <input required name="Name" type="text" placeholder="@localizer["InputName"]" autocomplete="off" class="entry-field"
                                           value="@dormitories[i].DormitoryTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name" />

                                    <textarea required name="Description" type="text" placeholder="@localizer["InputDescription"]" autocomplete="off"
                                              class="entry-field mt-3">@dormitories[i].DormitoryTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description</textarea>

                                    <input required hidden type="text" name="Language" value="@supportedCultures[j].Name" />
                                    <hr>
                                }

                                <div class="row">
                                    @for (var j = 0; j < dormitories[i].Pictures.Count; j++)
                                    {
                                        <div class="col-6 mb-3">
                                            <div class="delete-photo">
                                                <input class="custom-checkbox" type="checkbox" name="PicturesToDelete"
                                                       value="@dormitories[i].Pictures.ElementAt(j).Id" id="dormitory-@i-photo-@j">
                                                <label for="dormitory-@i-photo-@j">@localizer["Remove"]</label>
                                                <div>
                                                    <img src="@dormitories[i].Pictures.ElementAt(j).Path" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <label for="load-dormitory-@i" class="load-labal">@localizer["SelectImages"]</label>
                                <input multiple name="Pictures" id="load-dormitory-@i" type="file" accept=".jpg, .jpeg, .png" class="load-input form-control" />

                                <div class="mt-3 d-flex justify-content-end">
                                    <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                    <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                </div>
                            </form>
                            <partial name="_PopupClose" />


                            <partial name="_PopupOpen" model='@idDelete' />
                            <form asp-action="DeleteDormitory" asp-route-id="@dormitories[i].Id" method="post" enctype="multipart/form-data">
                                <h4>@localizer["DeleteAction"]</h4>

                                @for (var j = 0; j < supportedCultures.Count; j++)
                                {
                                    <h5>@supportedCultures[j].Name</h5>
                                    <div>
                                        @localizer["InputName"]:
                                        @dormitories[i].DormitoryTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Name
                                        <br>
                                        @localizer["InputDescription"]:
                                        @dormitories[i].DormitoryTranslations.Where(x => x.Language == supportedCultures[j].Name).SingleOrDefault().Description
                                    </div>
                                    <hr>
                                }

                                <div class="mt-3 d-flex justify-content-end">
                                    <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                    <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                                </div>
                            </form>
                            <partial name="_PopupClose" />
                        }
                    }



                    @*  Create a new Dormitory by Admin  *@
                    @if (User.IsInRole(ApplicationRoles.Administrators))
                    {
                        <div class="w-100 mt-4 card-container">
                            <div class="card box adding-card">
                                <input type="button" class="open-popup add-btn" rel="add-hostel" />
                            </div>
                        </div>
                        <partial name="_PopupOpen" model='$"add-hostel"' />
                        <form asp-action="CreateDormitory" method="post" enctype="multipart/form-data">

                            <h4>@localizer["AddAction"]</h4>

                            @for (var i = 0; i < supportedCultures.Count; i++)
                            {
                                <h5>@supportedCultures[i].Name</h5>
                                <input class="entry-field" type="text" name="Name" placeholder="@localizer["InputName"]" autocomplete="off" required />
                                <textarea class="entry-field mt-3" type="text" name="Description" value="" placeholder="@localizer["InputDescription"]" autocomplete="off" required></textarea>
                                <input required hidden name="Language" type="text" value="@supportedCultures[i].Name" />
                                <hr>
                            }

                            <label for="load-hostel-img" class="load-labal">@localizer["SelectImages"]</label>
                            <input multiple type="file" accept=".jpg, .jpeg, .png" name="Pictures" class="load-input form-control" id="load-hostel-img" />

                            <div class="mt-3 d-flex justify-content-end">
                                <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                                <button type="submit" class="btn btn-primary">@localizer["ButtonSave"]</button>
                            </div>
                        </form>
                        <partial name="_PopupClose" />
                    }

                </div>
            }




        </div>

    </div>
</div>
