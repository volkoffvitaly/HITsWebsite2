@model string
@using hitsWebsite.Services
@inject IDataProviderService DataProviderService
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> localizationOptions

@{
    // projectNameOfPage
    ViewData["Title"] = Model;

    // Cultures info
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();  // Current culture request
    var supportedCultures = localizationOptions.Value.SupportedUICultures;  // Supported cultures in app

    // Get required info about page
    var dynamicPage = await DataProviderService.GetDynamicPageInfo(ViewData["Title"].ToString());
    var dynamicPage_CurrentCulture = dynamicPage.DynamicPageTranslations.Where(x => x.Language == culture.RequestCulture.UICulture.Name).SingleOrDefault();
}

<div class="popup-bg"></div>

<div class="row mb-5">
    <div class="d-none d-lg-block col-3">
    </div>
    <div class="col-lg-9 title-page">
        <span class="purple-highlight">&lt;title&gt;</span>
        @*  Page info  *@
        <h1>@dynamicPage_CurrentCulture.Name</h1>
        <div class="row mt-5 align-items-center">
            <div class="col-md-8">
                <p>
                    @dynamicPage_CurrentCulture.Description
                </p>
            </div>
            <div class="col-md-4 mt-4 mt-md-0">
                @*  Edit page info  *@
                @if (User.IsInRole(ApplicationRoles.Administrators))
                {
                    <button type="button" class="open-popup big-btn mb-3" rel="edit-page-info">Редактировать</button>

                    var id = "edit-page-info";
                    <partial name="_PopupOpen" model="@id"/>
                    <form asp-action="EditDynamicPageInfo" asp-controller="Home" asp-route-projectNameOfPage="@ViewData["Title"].ToString()" asp-route-currentControllerName="@ViewData["Title"].ToString()" method="post">
                        @for (var i = 0; i < supportedCultures.Count; i++)
                        {
                            var dynamicPageTranslation = dynamicPage.DynamicPageTranslations.Where(x => x.Language == supportedCultures[i].Name).SingleOrDefault();

                            <h5>@supportedCultures[i].Name</h5>

                            <input class="entry-field" type="text" name="@("Name[" + i + "]")"
                                   value="@dynamicPageTranslation.Name"
                                   placeholder="@localizer["InputName"]" autocomplete="off" required />

                            // textarea shouldn't has any extra spaces between openning and closing tags
                            <textarea class="entry-field mt-3" type="text" name="@("Description[" + i + "]")" placeholder="@localizer["InputDescription"]" autocomplete="off"
                                      required>@dynamicPageTranslation.Description</textarea>

                            <input type="hidden" name="@("Language[" + i + "]")" value="@supportedCultures[i].Name" required />
                            <hr>
                        }
                        <div class="mt-3 d-flex justify-content-end">
                            <button type="button" class="close-popup btn btn-outline-danger mr-2">@localizer["ButtonCancel"]</button>
                            <button type="submit" class="btn btn-outline-primary">@localizer["ButtonSave"]</button>
                        </div>
                    </form>
                    <partial name="_PopupClose" />
                }

                @*  Learn more button *@
                <button type="button" class="big-btn">@localizer["LearnMore"]</button>
            </div>
        </div>
    </div>
</div>